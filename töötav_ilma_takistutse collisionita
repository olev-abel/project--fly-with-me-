import pygame
from math import *
import random
pygame.init()
#Tausta loomine
window=pygame.display.set_mode((800,400))
pygame.display.set_caption('window')
#vajalikud parameetrid game loobi jaoks
clock = pygame.time.Clock()
takistused_kell=100
takistused_kell1=0
takistused=[[800,50]]# esimene takistus
#värvid
black = (0,0,0)
white = (255,255,255)

#pildid
minion = pygame.image.load("minion.png")
kivi=pygame.image.load("kivi.png")

#minion
x, y = 100,100
moveX, moveY= 0,0

#taust
siinused=[]
step=0
AMPLITUDE=30
kõrgus=20
xPos=0

#siinuste hoidmised listis, et joonistada korralikud sinosoidid
for i in range(2400):
    yPos = -1 * sin(step) * AMPLITUDE
    siinused.append((int(xPos), int(yPos) + kõrgus))
    xPos += 0.5
    step += 0.01046
    step %= 2 * pi



loop = True
while loop:
    #kontrollib, et aken poleks suletud.
    for event in pygame.event.get():
        if event.type==pygame.QUIT:
            loop = False
    #joonistab ülemise ja alumise seina.
    for i,j  in siinused:
        pygame.draw.circle(window, black, (i,j + kõrgus), 5)
        pygame.draw.circle(window, black, (i,j + kõrgus+320), 5)
        if i == 100:
            m = j
            n = j+320
    
    
    
    #tõstab siinuse väärtused ühe võrra listis edasi, et tekitada animatsioon. 
    muutuja=siinused[-1]
    for i in range(len(siinused)-1,-1,-1):
        if siinused[i][0]==0:
            punkt = (1199, siinused[i][1])
            siinused[i]= punkt
        else:
            punkt=(siinused[i][0]-1,siinused[i][1])
            siinused[i] = punkt
    
    
    #siinuse muutumine
    xPos += 0.5
    step += 0.008
    step %= 2 * pi
    pygame.display.flip()
    window.fill((0,0,255))#Taustavärv

    #Takistused
    takistused_kell-=1#et takistused tuleksid koguaeg kindla aja tagant
    if takistused_kell==0:
        takistused.append([800, random.randint(50,245)])#listi panek y random
        takistused_kell=120-(takistused_kell1*2.6)# takistuste ilmumiskiirus
        if takistused_kell1>=35:
            takistused_kell1=35
        else:
            takistused_kell1+=5
    indeks=0
    for takistus in takistused:
        if takistus[0]<-50:
            takistused.pop(indeks)# võtab takistuse ära listist, kui takistuse x koordinaat on -50 väiksem ehk takistus kadunud
        takistus[0]-=5
        indeks=1
    print(takistused, y)
    
    

    for takistus in takistused:
        window.blit(kivi, takistus)
    
    # minioni liigutamine
    if event.type == pygame.MOUSEBUTTONDOWN:
        moveY = -3
    if event.type == pygame.MOUSEBUTTONUP:
        moveY = 3
    y += moveY      
    window.blit(minion, (x,y))
    print(takistused, y)
    
    if m-3 < y-9 and m+3>y-9:
        loop = False

    if n-3 < y+9 and n+3>y+9:
        loop = False
    for i in takistused:
        if i[0] == x and i[1] == y:
            loop = False
    
    clock.tick(100) # muutes seda numbrit saab tõsta ja langetada kiirust ehk takti.

pygame.quit()
